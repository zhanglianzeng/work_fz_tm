/*============================================================================
Filename : driven_shield.h
Project : QTouch Modular Library
Purpose : Provides drivenshield support for SAM microcontorllers

This file is part of QTouch Modular Library Release 7.4.1 application.

Important Note: Do not edit this file manually.
                Use QTouch Configurator within Microhchip START to apply any
                modifications to this file.

Usage License: Refer license.h file for license information
Support: Visit http://www.microchip.com/support/hottopics.aspx
               to create MySupport case.

------------------------------------------------------------------------------
Copyright (c) 2020 Microchip. All rights reserved.
------------------------------------------------------------------------------
============================================================================*/

#ifndef DRIVEN_SHIELD_H
#define DRIVEN_SHIELD_H

#include <sam.h>
#include "../../driver/config/peripheral_clk_config.h"

/*============================================================================
void drivenshield_configure()
------------------------------------------------------------------------------
Purpose: Sets up the qtm_softshield_config_t qtm_softshield_config object
Input  : Users application / configuration parameters
Output : None
Notes  : This setup is very product dependent,
         users can setup the delays between the SW_Trigger event and
         PWM2 and PTC start, Select Two or Three level Shield mode
         Users also use this function to configure GPIO pins and Enable
         GCLKs and APBClocks for the peripherals associated with the shield
============================================================================*/
void drivenshield_configure();

/*============================================================================
void drivenshield_start(uint8_t csd, uint8_t sds, uint8_t prescaler, uint32_t volatile *dst_addr, uint32_t value)
------------------------------------------------------------------------------
Purpose: user call back from the SAMD21 Acquisition engine
Input  : Charge Share Delay (CSD) setting from PTC Acq. engine, (Set to 0 in SAMD21)
         Sample Delay Selection (SDS) setting from PTC Acq. engine this is the Frequency Hop Value for this cycle
         Prescaler setting from the PTC Acq. Engine
Output : None
Notes  : This function uses the EVSYS to start the PTC to acquire touch
============================================================================*/
void drivenshield_start(uint8_t csd, uint8_t sds, uint8_t prescaler, uint32_t volatile *dst_addr, uint32_t value);

/*============================================================================
void drivenshield_stop(void)
------------------------------------------------------------------------------
Purpose: Stops the softshiled timers
Input  : none
Output : none
Notes  : This function is called from the PTC EOC handler in the users application in touch.c
============================================================================*/
void drivenshield_stop(void);

/*============================================================================
void drivenshield_disable_eoc_event(void);
------------------------------------------------------------------------------
Purpose: Disconnects the EOC as an event generator
Input  : All parameters are set to 0,
Output : none
Notes  : This function is called from the PTC EOC handler in the users application in touch.c
============================================================================*/
void drivenshield_disable_eoc_event(void);


void SHIELD_TC_PWM_init(void);
#endif
